<UserControl x:Class="Checkpoint.View.MarkingCardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Checkpoint.View"
             xmlns:tools="clr-namespace:Checkpoint.Tools"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="90*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <materialDesign:ColorZone Background="#4E89C4" Foreground="White" Padding="16" CornerRadius="3" materialDesign:ShadowAssist.ShadowDepth="Depth3" Margin="2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Cartão Ponto</TextBlock>
                </StackPanel>
            </materialDesign:ColorZone>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="16*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="82*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="24*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="34*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25*"/>
                            <ColumnDefinition Width="75*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource MaterialDesignBody2TextBlock}" Margin="8 12 0 12">Empresa:</TextBlock>
                        <ComboBox  Grid.Column="2" Grid.Row="0" x:Name="CBCompany" materialDesign:HintAssist.Hint="Empresa"/>
                    </Grid>
                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="70*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Margin="0 12 0 12" Style="{StaticResource MaterialDesignBody2TextBlock}">Departamento:</TextBlock>
                        <ComboBox  Grid.Column="1" Grid.Row="0" x:Name="CBDepartment" materialDesign:HintAssist.Hint="Departamento" SelectionChanged="CBDepartment_SelectionChanged"/>
                    </Grid>
                    <Grid Grid.Column="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25*"/>
                            <ColumnDefinition Width="75*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Margin="0 12 0 12" Style="{StaticResource MaterialDesignBody2TextBlock}" >Cargo:</TextBlock>
                        <ComboBox  Grid.Column="1" Grid.Row="0" x:Name="CBOffice" materialDesign:HintAssist.Hint="Cargo" SelectionChanged="CBOffice_SelectionChanged"/>
                    </Grid>
                    <Grid Grid.Column="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="48*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <DatePicker Grid.Column="0" Language="PT-br" Margin="0 8 0 8" x:Name="DPStartDate" materialDesign:HintAssist.Hint="Data Inicio" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" UseLayoutRounding="True"/>
                        <DatePicker Grid.Column="2" Language="PT-br" Margin="0 8 0 8" x:Name="DPEndDate" materialDesign:HintAssist.Hint="Data Fim" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" UseLayoutRounding="True"/>
                    </Grid>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="24*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="14*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" x:Name="TBFilterEmployee" Margin="8 0 0 0" Text="{Binding TBFilterEmployee, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" materialDesign:HintAssist.Hint="Filtro Empregado"  Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                    </Grid>
                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25*"/>
                            <ColumnDefinition Width="75*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Margin="0 12 0 12" Style="{StaticResource MaterialDesignBody2TextBlock}" >Funcionário:</TextBlock>
                        <ComboBox  Grid.Column="1" Grid.Row="0" x:Name="CBEmployee" materialDesign:HintAssist.Hint="Funcionário" ItemsSource="{Binding EmployeeList, Mode=TwoWay}"/>
                    </Grid>
                    <Grid Grid.Column="7">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Button Name="BTCharge" HorizontalAlignment="Center" Margin="0 0 8 0" Background="#4682B4" Width="100" ToolTip="Carregar Horário" BorderThickness="0" Click="loadDailyMarking">Carregar</Button>
                    </Grid>
                </Grid>
            </Grid>
            <Separator Grid.Row="1"/>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="90*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="90*"/>
                        <ColumnDefinition Width="5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="90*"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Column="1" Grid.Row="0" x:Name="GDScheduleDays" ItemsSource="{Binding dailyMarkingList}" CanUserSortColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" AutoGenerateColumns="False">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight"  Value="Bold" />
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Background" Value="#D0D0D0"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="Padding" Value="8,4,4,4"/>
                            </Style>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn Width="*" IsReadOnly="True" Binding="{Binding date, StringFormat=\{0:dd/MM/yyyy\}}" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="#D0D0D0" />
                                        <Setter Property="FontWeight"  Value="Bold" />
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="#D0D0D0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="#D0D0D0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </materialDesign:MaterialDataGridTextColumn>
                            <DataGridTemplateColumn Width="*" Header="Entrada 1">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding entryOne, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="cellEntryOne_TextChanged" MaxLength="5" x:Name="cellEntryOne" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Saída 1">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding exitOne, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="cellExitOne_TextChanged" x:Name="cellExitOne" MaxLength="5" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Entrada 2">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding entryTwo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="cellEntryTwo_TextChanged" x:Name="cellEntryTwo" MaxLength="5" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Saída 2">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding exitTwo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="cellExitTwo_TextChanged" x:Name="cellExitTwo" MaxLength="5" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Entrada 3">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding entryThree, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="cellEntryThree_TextChanged" x:Name="cellEntryThree" MaxLength="5" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Saída 3">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding exitThree, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="cellExitThree_TextChanged" x:Name="cellExitThree" MaxLength="5" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="Background" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Horas Padrão">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding standartHours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:HH\\:mm\}}" x:Name="cellStandartHours" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="#D0D0D0" />
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Faltas">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding faultHours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="cellFaultHours" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="#D0D0D0" />
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Horas Extras">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding extraHours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="cellExtraHours" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="#D0D0D0" />
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="Carga Horária">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding workload, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="cellWorkload" PreviewTextInput="NumberValidationTextBox"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="#D0D0D0" />
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Column="1" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60*"/>
                            <ColumnDefinition Width="20*"/>
                            <ColumnDefinition Width="20*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Name="BTAbsence" Background="#4682B4" Width="200" ToolTip="Salvar Modificações" BorderThickness="0" Margin="0" Click="showNewAbsenceModal">Afastamento</Button>
                        <Button Grid.Column="2" Name="BTSave" Background="#4682B4" Width="200" ToolTip="Salvar Modificações" BorderThickness="0" Margin="0" Click="upsertMarking">Salvar Alterações</Button>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
